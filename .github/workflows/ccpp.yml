name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:

  build-default:

    runs-on: ${{ matrix.sets.os }}
    env:
      CC: ${{ matrix.sets.cc }}
      CXX: ${{ matrix.sets.cxx }}
      CXXFLAGS: ${{ matrix.sets.debug }}
    strategy:
      matrix:
        sets:
          - os: ubuntu-18.04
            cc: gcc-5
            cxx: g++-5
            package: g++-5
            debug: -Og -D_DEBUG
          - os: ubuntu-18.04
            cc: gcc-6
            cxx: g++-6
            package: g++-6
            debug: -Og -D_DEBUG
          - os: ubuntu-18.04
            cc: gcc-7
            cxx: g++-7
            package: g++-7
            debug: -Og -D_DEBUG
          - os: ubuntu-18.04
            cc: gcc-8
            cxx: g++-8
            package: g++-8
            debug: -Og -D_DEBUG

          - os: ubuntu-18.04
            cc: clang-4.0
            cxx: clang++-4.0
            package: clang-4.0
            debug: -Og -D_DEBUG
          - os: ubuntu-18.04
            cc: clang-5.0
            cxx: clang++-5.0
            package: clang-5.0
            debug: -Og -D_DEBUG
          - os: ubuntu-18.04
            cc: clang-6.0
            cxx: clang++-6.0
            package: clang-6.0
            debug: -Og -D_DEBUG
          - os: ubuntu-18.04
            cc: clang-7
            cxx: clang++-7
            package: clang-7
            debug: -Og -D_DEBUG
          - os: ubuntu-18.04
            cc: clang-8
            cxx: clang++-8
            package: clang-8
            debug: -Og -D_DEBUG

          - os: ubuntu-18.04
            cc: clang-6.0
            cxx: clang++-6.0
            package: clang-6.0
            debug:
    steps:
    - uses: actions/checkout@v2
    - name: dependencies installation
      run: |
        sudo apt update
        sudo apt install cmake libgnutls28-dev libgtest-dev libgtkmm-3.0-dev libltdl-dev libtool zlib1g-dev ${{ matrix.sets.package }}
    - name: cmake -B build
      run: cmake -B build
    - name: cmake --build build -j$(nproc)
      run: cmake --build build -j$(nproc)
    - name: ./build/test/gtest_jdim
      run: ./build/test/gtest_jdim
    - name: ./build/src/jdim -V
      run: ./build/src/jdim -V

  meson-build:

    runs-on: ubuntu-18.04
    env:
      CC: gcc-7
      CXX: g++-7
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: '3.6'
    - name: dependencies installation
      run: |
        sudo apt update
        sudo apt install libgnutls28-dev libgtest-dev libgtkmm-3.0-dev libltdl-dev libtool ninja-build zlib1g-dev
    - name: install meson==0.49.2
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install meson==0.49.2
    - name: meson builddir
      run: meson builddir
    - name: meson test -C builddir
      run: meson test -C builddir
    - name: ./builddir/src/jdim -V
      run: ./builddir/src/jdim -V

  build-libs:

    runs-on: ubuntu-18.04
    env:
      CC: ${{ matrix.compiler.cc }}
      CXX: ${{ matrix.compiler.cxx }}
      CXXFLAGS: -Og -D_DEBUG
      GTEST_SRCDIR: /usr/src/googletest
    strategy:
      matrix:
        compiler:
          - cc: gcc-7
            cxx: g++-7
            package: g++-7
          - cc: clang-6.0
            cxx: clang++-6.0
            package: clang-6.0
        deps:
          - config_args: -Dtls=gnutls -Dregex=posix -Dsessionlib=no -Dcompat_cache_dir=OFF
            packages: libgnutls28-dev
          - config_args: -Dtls=openssl -Dregex=oniguruma -Dmigemo=ON -Dpangolayout=ON
            packages: libssl-dev libonig-dev libmigemo-dev
          - config_args: -Dtls=gnutls -Dregex=glib -Dalsa=ON
            packages: libgnutls28-dev libasound2-dev
          - config_args: -Dtls=openssl -Dregex=glib
            packages: libssl-dev
    steps:
    - uses: actions/checkout@v2
    - name: dependencies installation (${{ matrix.deps.packages }})
      run: |
        sudo apt update
        sudo apt install cmake libgtest-dev libtool libltdl-dev libgtkmm-3.0-dev ${{ matrix.deps.packages }} ${{ matrix.compiler.package }}
    - name: cmake -B build ${{ matrix.deps.config_args }}
      run: cmake -B build ${{ matrix.deps.config_args }}
    - name: cmake --build build -j$(nproc)
      run: cmake --build build -j$(nproc)
    - name: ./build/test/gtest_jdim
      run: ./build/test/gtest_jdim
    - name: ./build/src/jdim -V
      run: ./build/src/jdim -V

  manual:

    runs-on: ubuntu-18.04
    env:
      NOKOGIRI_USE_SYSTEM_LIBRARIES: true
    steps:
    - uses: actions/checkout@v2
    - name: dependencies installation
      run: |
        sudo apt update
        sudo apt install ruby-dev ruby-bundler libcurl4-openssl-dev libxslt1-dev
    - name: make -j$(nproc) -C docs build
      run: make -j$(nproc) -C docs build
